name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.14

      - name: Check out code
        uses: actions/checkout@v2

      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-build-${{ hashFiles('**/go.sum') }}

      - name: Get dependencies
        run: |
          go get -v -t -d ./...

      - name: Build
        run: go build -v ./...

  unit-test:
    name: Unit tests
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-build-${{ hashFiles('**/go.sum') }}

      - name: Test
        run: go test -short -timeout 10m -v ./... -coverprofile=coverage.txt -covermode=count

      - name: Upload coverage report to Codecov.io
        uses: codecov/codecov-action@v1.0.15
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.txt
          flags: unit-test
          name: codecov-umbrella

  integration-test:
    name: Integration test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        artifactory: [ '7.2.1', '7.3.2', '7.4.3', '7.5.7', '7.6.3', '7.7.8', '7.9.2', '7.10.6', '7.11.2' ]
    needs: build
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-build-${{ hashFiles('**/go.sum') }}

      - name: Test
        env:
          TEST_LICENSE: ${{ secrets.TEST_LICENSE }}
          ARTIFACTORY_VERSION: ${{ matrix.artifactory }}
        run: go test -run Integration -timeout 30m -v ./test/... -coverprofile=coverage.txt -covermode=count

      - name: Upload coverage report to Codecov.io
        uses: codecov/codecov-action@v1.0.15
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.txt
          flags: integration,${{ matrix.artifactory }}
          name: codecov-umbrella

  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Lint
        uses: golangci/golangci-lint-action@v2
        with:
          # Required: the version of golangci-lint is required and must be specified without patch version: we always use the latest patch version.
          version: v1.33
        env:
          GOROOT: ""

  codacy:
    name: Codacy Analysis
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Codacy Analysis CLI
        uses: codacy/codacy-analysis-cli-action@1.1.0

  goreportcard:
    name: Go Report Card
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Go report card
        uses: creekorful/goreportcard-action@v1.0
